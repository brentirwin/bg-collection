{"version":3,"sources":["Game.js","GamesList.js","defaults.js","Filters.js","user.js","App.js","serviceWorker.js","index.js"],"names":["Game","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","visible","details","display","showHideDetails","bind","assertThisInitialized","inherits","createClass","key","value","setState","_this2","game","react_default","a","createElement","className","onClick","src","thumbnail","alt","name","rating","complexity","numPlayers","min","max","playTime","Game_HiddenBottom","React","Component","HiddenBottom","style","href","url","Game_Tags","tags","categories","mechanics","description","Tags","map","tag","index","GamesList","apply","arguments","console","log","games","length","id","filter","Game_Game","defaults","width","maxWidth","marginLeft","marginRight","Filters","numPlayersStr","toString","playTimeStr","num","Filters_FilterSlider","currentValue","defaultValue","step","handleChange","handleNumPlayersChange","handleCheck","Filters_FilterRange","handlePlayTimeChange","handleComplexityChange","FilterSlider","type","checked","onChange","e","es","FilterRange","allowCross","user","username","convert","require","App","event","target","objectSpread","getData","_callee","userData","url2","regenerator_default","wrap","_context","prev","next","axios","get","then","res","JSON","parse","xml2json","data","compact","spaces","items","item","sent","_attributes","objectid","join","abrupt","stop","rawGames","getCategory","cat","link","Array","isArray","Math","round","parseFloat","statistics","ratings","average","_text","year","yearpublished","parseInt","minplayers","maxplayers","minplaytime","maxplaytime","html","txt","document","innerHTML","decodeHTML","designer","averageweight","Filters_Filters","GamesList_GamesList","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.df579e55.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      details: { display: 'none' }\n    }\n    this.showHideDetails = this.showHideDetails.bind(this);\n  }\n\n  showHideDetails() {\n    if (this.state.visible)\n      this.setState({\n        details: { display: 'none' },\n        visible: false\n      });\n    else this.setState({\n      details: { display: 'block' },\n      visible: true\n    });\n  }\n\n  render() {\n    const game = this.props.game;\n\n    return (\n      <div className=\"game\" >\n        <div className=\"top-visible\" onClick={() => this.showHideDetails()}>\n          <div className=\"game-image-container\">\n            <img src={game.thumbnail} alt={game.name + 'image'} className=\"thumbnail\"/>\n          </div>\n          <div className=\"game-info-container\">\n            <div className=\"game-info\">\n              <div className=\"name\">\n                {game.name}\n              </div>\n              <div className=\"rating\">\n                BGG Rating: {game.rating}\n              </div>\n              <div className=\"year\">\n                Complexity: {game.complexity}\n              </div>\n              <div className=\"players\">\n                Players: {game.numPlayers.min}-{game.numPlayers.max}\n              </div>\n              <div className=\"playtime\">\n                Play time: {game.playTime.min}-{game.playTime.max} min\n              </div>\n            </div>\n          </div>\n        </div>\n        <HiddenBottom visible={this.state.details} game={game}/>\n      </div>\n    );\n  }\n};\n\nconst HiddenBottom = props => {\n  const game = props.game;\n  return (\n    <div className=\"bottom-hidden\" style={props.visible}>\n      <div className=\"view-on-bgg\">  \n        <a href={game.url}>View on BoardGameGeek.com</a>\n      </div>\n      <h4>Categories</h4>\n      <Tags tags={game.categories} />\n      <h4>Mechanics</h4>\n      <Tags tags={game.mechanics} />\n      <h4>Description</h4>\n      {game.description}\n    </div>\n  );\n}\n\nconst Tags = props => {\n  const tags = props.tags.map( (tag, index) => (\n    <li key={index}>{tag}</li>\n  ));\n  return (\n    <ul>{tags}</ul>\n  );\n}","import React from 'react';\nimport { Game } from './Game.js';\n\nexport class GamesList extends React.Component {\n\n\trender() {\n\t\tconsole.log(this.props.games);\n\t\tif (this.props.games.length === 0) {\n\t\t\treturn (\n\t\t\t\t<div id=\"loading\">\n\t\t\t\t\t<h3>Loading...</h3>\n\t\t\t\t\tBGG's API can be slow... feel free to <a href='.'>refresh</a>.\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\n\t\tconst filteredGames = this.props.games.filter( game => {\n\t\t\tif (this.props.filter.numPlayers) {\n\t\t\t\tif (this.props.numPlayers === 10 && game.numPlayers.max >= 10)\n\t\t\t\t\treturn game;\n\t\t\t\tif (this.props.numPlayers >= game.numPlayers.min &&\n\t\t\t\t\t\tthis.props.numPlayers <= game.numPlayers.max)\n\t\t\t\t\treturn game;\n\t\t\t\treturn null;\n\t\t\t} else return game;\n\t\t}).filter( game => {\n\t\t\tif (this.props.filter.playTime) {\n\t\t\t\tif ((game.playTime.min >= this.props.playTime[0]) &&\n\t\t\t\t\t\t(game.playTime.min <= this.props.playTime[1]))\n\t\t\t\t\treturn game;\n\t\t\t\tif ((game.playTime.max >= this.props.playTime[0]) &&\n\t\t\t\t\t\t(game.playTime.max <= this.props.playTime[1]))\n\t\t\t\t\treturn game;\n\t\t\t\treturn null;\n\t\t\t} else return game;\n\t\t}).filter( game => {\n\t\t\tif (this.props.filter.complexity) {\n\t\t\t\tif ((game.complexity >= this.props.complexity[0]) &&\n\t\t\t\t\t\t(game.complexity <= this.props.complexity[1]))\n\t\t\t\t\treturn game;\n\t\t\t\treturn null;\t\t\t\t\n\t\t\t} else return game;\n\t\t});\n\n\t  const games = filteredGames.map((game, index) => (\n\t    <li key={index}>\n\t      <Game game={game} />\n\t    </li>\n\t  ));\n\t  return (\n\t  \t<div className=\"gamesList\">\n\t  \t\t<ul className=\"gamesList\">{games}</ul>\n\t  \t</div>\n\t  \t);\n\t}\n}\n","export const defaults = {\n\tnumPlayers: 4,\n\tplayTime: [0, 120],\n\tcomplexity: [0, 5]\n}","import React from 'react';\nimport Slider, { Range } from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { defaults } from './defaults.js';\n\nconst style = {\n\twidth: 300,\n\tmaxWidth: '80%',\n\tmarginLeft: 10,\n\tmarginRight: 10\n};\n\nexport class Filters extends React.Component {\n\trender() {\n\t\tconst numPlayersStr = (this.props.numPlayers === 10)\n\t\t\t\t\t\t\t\t\t\t\t\t? '10+' : this.props.numPlayers.toString();\n\t\tconst playTimeStr = this.props.playTime.map(num => {\n\t\t\treturn (num === 0) ? '<15'\n\t\t\t\t\t : (num === 120) ? '120+'\n\t\t\t\t\t : num.toString();\n\t\t});\n\t\tconst complexity = this.props.complexity.map(num => num.toString());\n\n\t\treturn (\n\t\t\t<div className=\"filters\">\n\t\t\t\t<FilterSlider\n\t\t\t\t\tname=\"# of players\"\n\t\t\t\t\tid=\"numPlayers\"\n\t\t\t\t\tcurrentValue={numPlayersStr}\n\t\t\t\t\tmin={1}\n\t\t\t\t\tmax={10}\n\t\t\t\t\tdefaultValue={defaults.numPlayers}\n\t\t\t\t\tstep={1}\n\t\t\t\t\thandleChange={this.props.handleNumPlayersChange}\n\t\t\t\t\thandleCheck={this.props.handleCheck}\n\t\t\t\t\tfilter={this.props.filter}\n\t\t\t\t/>\n\t\t\t\t<FilterRange\n\t\t\t\t\tname=\"Playtime (min)\"\n\t\t\t\t\tid=\"playTime\"\n\t\t\t\t\tcurrentValue={playTimeStr}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={120}\n\t\t\t\t\tdefaultValue={defaults.playTime}\n\t\t\t\t\tstep={15}\n\t\t\t\t\thandleChange={this.props.handlePlayTimeChange}\n\t\t\t\t\thandleCheck={this.props.handleCheck}\n\t\t\t\t\tfilter={this.props.filter}\n\t\t\t\t/>\n\t\t\t<FilterRange\n\t\t\t\t\tname=\"Complexity\"\n\t\t\t\t\tid=\"complexity\"\n\t\t\t\t\tcurrentValue={complexity}\n\t\t\t\t\tmin={0}\n\t\t\t\t\tmax={5}\n\t\t\t\t\tdefaultValue={defaults.complexity}\n\t\t\t\t\tstep={0.5}\n\t\t\t\t\thandleChange={this.props.handleComplexityChange}\n\t\t\t\t\thandleCheck={this.props.handleCheck}\n\t\t\t\t\tfilter={this.props.filter}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst FilterSlider = props => {\n\treturn (\n\t\t<div style={style}>\n\t\t\t<div className=\"filter-label\">\n\t\t\t\t<input\n\t\t\t\t\tname={props.id}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={props.filter[props.id]}\n\t\t\t\t\tonChange={(e) => props.handleCheck(e)}\n\t\t\t\t/>\n\t\t\t\t{props.name}: {props.currentValue}\n\t\t\t</div>\n\t\t\t<Slider\n\t\t\t\tmin={props.min}\n\t\t\t\tmax={props.max}\n\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\tstep={props.step}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nconst FilterRange = props => {\n\treturn (\n\t\t<div style={style}>\n\t\t\t<div className=\"filter-label\">\n\t\t\t\t<input\n\t\t\t\t\tname={props.id}\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tchecked={props.filter[props.id]}\n\t\t\t\t\tonChange={(e) => props.handleCheck(e)}\n\t\t\t\t/>\n\t\t\t\t{props.name}: {props.currentValue[0]} - {props.currentValue[1]}\n\t\t\t</div>\n\t\t\t<Range\n\t\t\t\tmin={props.min}\n\t\t\t\tmax={props.max}\n\t\t\t\tdefaultValue={props.defaultValue}\n\t\t\t\tstep={props.step}\n\t\t\t\tallowCross={false}\n\t\t\t\tonChange={props.handleChange}\n\t\t\t/>\n\t\t</div>\n\t);\n}","export const user = {\n\tusername: 'brentirwin',\n\tname: 'Brent'\n}","import React, { Component } from 'react';\nimport './App.css';\nimport axios from \"axios\";\nimport { GamesList } from './GamesList.js';\nimport { Filters } from './Filters.js';\nimport { user } from './user.js';\nimport { defaults } from './defaults.js';\nconst convert = require('xml-js');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: user.username,\n      numPlayers: defaults.numPlayers,\n      playTime: defaults.playTime,\n      complexity: defaults.complexity,\n      filter: {\n        numPlayers: false,\n        playTime: false,\n        complexity: false\n      },\n      games: []\n    };\n\n    this.handleNumPlayersChange = this.handleNumPlayersChange.bind(this);\n    this.handlePlayTimeChange = this.handlePlayTimeChange.bind(this);\n    this.handleComplexityChange = this.handleComplexityChange.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n  }\n\n  handleNumPlayersChange(value) {\n    this.setState({ numPlayers: value });\n  }\n\n  handlePlayTimeChange(value) {\n    this.setState({ playTime: value });\n  }\n\n  handleComplexityChange(value) {\n    this.setState({ complexity: value });\n  }\n\n  handleCheck(event) {\n    const target = event.target;\n    const value = target.checked;\n    const name = target.name;\n    \n    let filter = {...this.state.filter};\n    filter[name] = value;\n\n    this.setState({ filter: filter });\n  }\n\n  async componentDidMount() {\n\n    async function getData(username) {\n      const url =\n        'https://boardgamegeek.com/xmlapi2/collection?username='\n        + username;\n\n      const userData = await axios.get(url).then(res => {\n        const data = JSON.parse(\n          convert.xml2json(res.data, { compact: true, spaces: 2 })\n        );\n        return data.items.item;\n      });\n\n      const url2 = \n        'https://boardgamegeek.com/xmlapi2/thing?id='\n        + userData.map( game => game._attributes.objectid ).join(',')\n        + '&stats=1';\n\n      const games = await axios.get(url2).then(res => {\n        const data = JSON.parse(\n          convert.xml2json(res.data, { compact: true, spaces: 2 })\n        );\n        return data.items.item;\n      });\n      return games;\n    }\n    const rawGames = await getData(this.state.username);\n\n    const games = (rawGames).map(game => {\n\n      const getCategory = (cat) => {\n        return game.link.filter(link => {\n          return (link._attributes.type === cat) ? link : null;\n        }).map(link => {\n          return link._attributes.value;\n        });\n      };\n\n      const decodeHTML = (html) => {\n        var txt = document.createElement('textarea');\n        txt.innerHTML = html;\n        return txt.value;\n      }\n\n      return {\n        id:         game._attributes.id,\n        name:       Array.isArray(game.name)\n                    ? game.name[0]._attributes.value\n                    : game.name._attributes.value,\n        rating:     Math.round(parseFloat(\n                      game.statistics.ratings.average._attributes.value\n                    ) * 100) / 100,\n        thumbnail:  game.thumbnail._text,\n        year:       game.yearpublished._attributes.value,\n        numPlayers: {\n          min:      parseInt(game.minplayers._attributes.value),\n          max:      parseInt(game.maxplayers._attributes.value)\n        },\n        playTime: {\n          min:      parseInt(game.minplaytime._attributes.value),\n          max:      parseInt(game.maxplaytime._attributes.value)\n        },\n        url:        'https://boardgamegeek.com/boardgame/'\n                    + game._attributes.id,\n        description: decodeHTML(game.description._text),\n        categories: getCategory('boardgamecategory'),\n        mechanics:  getCategory('boardgamemechanic'),\n        designer:   getCategory('boardgamedesigner')[0],\n        complexity: Math.round(parseFloat(\n                      game.statistics.ratings.averageweight._attributes.value\n                    ) * 100) / 100\n      }\n    });\n\n    this.setState({ games: games });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <h1>{user.name}'s Board Games</h1>\n          <Filters\n            handleNumPlayersChange={this.handleNumPlayersChange}\n            numPlayers={this.state.numPlayers}\n\n            handlePlayTimeChange={this.handlePlayTimeChange}\n            playTime={this.state.playTime}\n\n            handleComplexityChange={this.handleComplexityChange}\n            complexity={this.state.complexity}\n\n            handleCheck={this.handleCheck}\n            filter={this.state.filter}\n          />\n          <GamesList\n            games={this.state.games}\n            filter={this.state.filter}\n            numPlayers={this.state.numPlayers.num}\n            playTime={this.state.playTime}\n            complexity={this.state.complexity}\n          />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}